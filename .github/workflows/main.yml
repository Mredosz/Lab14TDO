name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "Deployment environment"
        options:
          - staging
          - production
      version:
        description: "Version to deploy"
        required: true
      notify-team:
        type: boolean
        default: false

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm run lint

  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm run format:check

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm audit --audit-level=high

  test:
    runs-on: ubuntu-latest
    needs: [lint, format-check, security-audit]
    strategy:
      matrix:
        node: [16, 18, 20]
    container:
      image: node:${{ matrix.node }}
      options: --cpus 2 --memory 4g
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-
      - run: npm ci
      - run: npm test -- --coverage --reporters=default --reporters=jest-junit
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Archive test reports
        uses: actions/upload-artifact@v4
        with:
          name: junit-report-node-${{ matrix.node }}
          path: junit.xml
      - name: Archive coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.node }}
          path: coverage/

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: app_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: docker compose up -d
      - run: curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
      - run: chmod +x wait-for-it.sh
      - run: ./wait-for-it.sh localhost:5432 --timeout=30 --strict
      - run: npm run integration-test

  build:
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() && github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy App
        uses: ./.github/actions/custom-deploy
        with:
          environment: ${{ github.event.inputs.environment }}
          version: ${{ github.event.inputs.version }}
          notify-team: ${{ github.event.inputs.notify-team }}

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Notify via GitHub Issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: |
            [CI/CD] Deployment ${{ github.event.inputs.environment || 'N/A' }} finished: ${{ job.status }}
          content-filepath: .github/notify-template.md
          labels: |
            ci-cd
            automated
